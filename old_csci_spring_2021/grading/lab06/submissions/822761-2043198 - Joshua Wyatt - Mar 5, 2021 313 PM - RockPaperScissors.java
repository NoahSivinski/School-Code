import java.util.Scanner;
/*
 * RockPaperScissors.java
 * Author:  Joshua Wyatt
 * Submission Date:  3/5/2021
 *
 * Purpose: A brief paragraph description of the
 * program. What does it do?
 * 
 * This program takes an input from a user of how many games they
 * want to play of rock, paper, scissors with an auto generated code
 * and then asks for the piece they would choose to use against the
 * computer (rock, paper, or scissors.) After this is chosen, the
 * auto generated code then inputs and randomly selects rock, paper
 * or scissors and pairs it against the users input. The score is 
 * then kept between the two and the code continues to ask for 
 * rock, paper, or scissors from the user until a desired number
 * of wins is reached by either the user or the computer.
 *
 * Statement of Academic Honesty:
 *
 * The following code represents my own work. I have neither
 * received nor given inappropriate assistance. I have not copied
 * or modified code from any source other than the course webpage
 * or the course textbook. I recognize that any unauthorized
 * assistance or plagiarism will be handled in accordance with
 * the University of Georgia's Academic Honesty Policy and the
 * policies of this course. I recognize that my work is based
 * on an assignment created by the Department of Computer
 * Science at the University of Georgia. Any publishing 
 * or posting of source code for this assignment is strictly
 * prohibited unless you have written consent from the Department
 * of Computer Science at the University of Georgia.  
 */
public class RockPaperScissors 
{
	public static void main(String[] args)
	{
		Scanner keyboard = new Scanner(System.in);
		
//		user is prompted to enter the number of wins or points to win the rock, paper, scissors
//		game.
		
		System.out.print("Points to win: ");
		int pointsToWin = keyboard.nextInt();
		
		int computerPoints = 0, userPoints = 0;
		
//		While loop is started which keeps the loop going until a
//		desired score is reached by the computer or user.

		
		while (true) {

//			The users input is also needed to choose rock, paper, or scissors.
			
			System.out.print("Rock, paper, or scissors? ");
			String strInput = keyboard.next();
			String computerMove = ComputerOpponent.getMove();
			
//			if and if else and else if statements begin addressing
//			the input by the user along with the input by computer
//			auto generated by the code provided and compares the
//			two inputs and counts the score.
			
			if (strInput.equalsIgnoreCase("rock"))
			{
				if (computerMove == "rock") {
					System.out.println("The computer chose rock, so it's a tie. (" + userPoints + "-" + computerPoints + ")");
				}
				else if (computerMove == "paper") {
					computerPoints++;
					System.out.println("The computer chose paper, so you lose. (" + userPoints + "-" + computerPoints + ")");
				}
				else {
					userPoints++;
					System.out.println("The computer chose scissors, so you win! (" + userPoints + "-" + computerPoints +")");
				}
				
			}
			else if (strInput.equalsIgnoreCase("paper"))
			{
				if (computerMove == "rock") {
					userPoints++;
					System.out.println("The computer chose rock, so you win! (" + userPoints + "-" + computerPoints + ")");
				}
				else if (computerMove == "paper") {
					System.out.println("The computer chose paper, so it's a tie. (" + userPoints + "-" + computerPoints + ")");
				}
				else { 
					computerPoints++;
					System.out.println("The computer chose scissors, so you lose. (" +userPoints+ "-" +computerPoints+ ")");
				}
			}
			else if (strInput.equalsIgnoreCase("scissors")) {
				if (computerMove == "rock") {
					computerPoints++;
					System.out.println("The computer chose rock, so you lose. (" +userPoints+ "-" +computerPoints+ ")");
				}
				else if (computerMove == "paper") {
					userPoints++;
					System.out.println("The computer chose paper, so you win! (" +userPoints+ "-" +computerPoints+ ")");
				}
				else if (computerMove == ("scissors")) {
					System.out.println("The computer chose scissors, so it's a tie (" +userPoints+ "-" +computerPoints+ ")");
				}
			}
			else {
				System.out.println("Please enter a valid input");
			}
			
//			Ending if else statement showing what to display after
//			wins or points have been added.
			
		if (userPoints == pointsToWin) {
			System.out.println("Congratulations! You won!");
			
		}
		
		else if (computerPoints == pointsToWin){
			System.out.println("Sorry, you lost. Better luck next time!");
			
//			Loop is ended
			
			System.exit(0);
		}
		}
			
	}}

